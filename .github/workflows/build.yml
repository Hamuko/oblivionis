name: Build

on:
  push:
  pull_request:

env:
  IMAGE_NAME: ${{ github.repository }}
  REGISTRY: ghcr.io

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Setup Python
        uses: actions/setup-python@v6
      - name: Run pre-commit
        uses: pre-commit/action@v3.0.1
  docker:
    runs-on: ubuntu-latest
    needs: [pre-commit]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Build cache path
        run: echo "CACHE_PATH=${GITHUB_REPOSITORY@L}" >> ${GITHUB_ENV}
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=tag
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          file: Dockerfile
          context: .
          push: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/') }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.CACHE_PATH }}:cache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.CACHE_PATH }}:cache,mode=max
